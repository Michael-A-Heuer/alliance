/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalendarStorage,
  CalendarStorageInterface,
} from "../CalendarStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "availableDays",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dateToMeetings",
    outputs: [
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "hour",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minute",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "duration",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emailAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610526806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806326b39476146100465780632e5dcee414610076578063ee51ae55146100a9575b600080fd5b610060600480360381019061005b9190610267565b6100c7565b60405161006d91906102af565b60405180910390f35b610090600480360381019061008b91906102ca565b6100f1565b6040516100a0949392919061038f565b60405180910390f35b6100b161019e565b6040516100be919061046d565b60405180910390f35b600281600781106100d757600080fd5b60209182820401919006915054906101000a900460ff1681565b6000602052836000526040600020602052826000526040600020602052816000526040600020818154811061012557600080fd5b906000526020600020016000935093505050508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900461ffff16908060000160189054906101000a900461ffff16905084565b600180546101ab906104be565b80601f01602080910402602001604051908101604052809291908181526020018280546101d7906104be565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b505050505081565b600080fd5b6000819050919050565b61024481610231565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b60006020828403121561027d5761027c61022c565b5b600061028b84828501610252565b91505092915050565b60008115159050919050565b6102a981610294565b82525050565b60006020820190506102c460008301846102a0565b92915050565b600080600080608085870312156102e4576102e361022c565b5b60006102f287828801610252565b945050602061030387828801610252565b935050604061031487828801610252565b925050606061032587828801610252565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035c82610331565b9050919050565b61036c81610351565b82525050565b600061ffff82169050919050565b61038981610372565b82525050565b60006080820190506103a46000830187610363565b6103b16020830186610380565b6103be6040830185610380565b6103cb6060830184610380565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561040e5780820151818401526020810190506103f3565b8381111561041d576000848401525b50505050565b6000601f19601f8301169050919050565b600061043f826103d4565b61044981856103df565b93506104598185602086016103f0565b61046281610423565b840191505092915050565b600060208201905081810360008301526104878184610434565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104d657607f821691505b602082108114156104ea576104e961048f565b5b5091905056fea26469706673582212200cf2ff7b8aa27b42bf21493bdedb78c2f010d487aa4112f822a6d1122b96eb0764736f6c63430008090033";

type CalendarStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalendarStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalendarStorage__factory extends ContractFactory {
  constructor(...args: CalendarStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalendarStorage> {
    return super.deploy(overrides || {}) as Promise<CalendarStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CalendarStorage {
    return super.attach(address) as CalendarStorage;
  }
  override connect(signer: Signer): CalendarStorage__factory {
    return super.connect(signer) as CalendarStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalendarStorageInterface {
    return new utils.Interface(_abi) as CalendarStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalendarStorage {
    return new Contract(address, _abi, signerOrProvider) as CalendarStorage;
  }
}
